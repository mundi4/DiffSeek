:root {
	--editor-font-size: 14px;
	--editor-line-height: 1.5;
	--editor-padding: 4px;
	--editor-td-border-color: #666666;
	--editor-underline-offset: 0.2em;
	--bg-normal: #ffffff;
	--bg-sync-mode: #f5f0e6;
	--text-normal: #000000;
	--text-sync-mode: #2f2a24;
}

diff-marker {
	display: inline-block;
	min-height: 1em;
	user-select: none;
}

diff-marker.block {
	display: block;
}

.sync-mode .anchor::before {
	content: "";
	display: block;
	height: var(--anchor-adjust, 0px);
}

.sync-mode .striped::before {
	background: transparent repeating-linear-gradient(135deg, hsl(0 0% 88% / 0.95) 0px, hsl(0 0% 88% / 0.95) 3px, transparent 3px, transparent 6px);
	opacity: 0.75;
}

.sync-mode diff-marker {
	min-height: calc(1em + var(--anchor-adjust, 0px));
}

/* Editor Styles */
.editor-wrapper {
	overflow-y: scroll;
	height: 100%;
	min-height: 0;
}

.editor {
	position: relative;
	border: 0;
	min-width: 0;
	width: 100%;
	min-height: 100%;
	overflow-y: visible;
	font-size: var(--editor-font-size);
	padding: var(--editor-padding);
	line-height: var(--editor-line-height);
	scroll-padding-top: calc(3em * var(--editor-line-height));
	word-break: break-all;
	overflow-wrap: anywhere;
	outline: none;
	z-index: 30;
	background-color: transparent;
}

.editor, .color-default {
	color: var(--text-normal);
}

.editor .color-red {
	color: red;
}

.editor table {
	table-layout: auto;
	border-collapse: collapse;
	border-spacing: 0;
	width: 100%;
}

.editor td {
	padding: 4px;
	position: relative;
	vertical-align: top;
	border: 1px solid var(--editor-td-border-color);
	padding: var(--editor-td-padding);
	min-height: calc(1em * var(--editor-line-height));
}

.editor * {
	/* 그림 같은게 너무 크면 싫잖아 */
	max-width: 100%;
}

.editor u {
	text-underline-offset: var(--editor-underline-offset);
}

.editor-maybe-170cm-wasnt-enough {
	display: none;
}

.sync-mode .editor-maybe-170cm-wasnt-enough {
	display: block;
	background: transparent repeating-linear-gradient(135deg, hsl(0 0% 90% / 0.95) 0px, hsl(0 0% 90% / 0.95) 5px, transparent 5px, transparent 10px);
	height: var(--height-boost, 0px);
}

/* Renderer Styles */
.renderer {
	position: absolute;
	top: 0;
	left: 0;
	width: 100%;
	height: 100%;
	overflow: hidden;
	pointer-events: none;
	z-index: 0;
}

.renderer canvas {
	position: absolute;
	top: 0;
	left: 0;
	width: 100%;
	height: 100%;
	will-change: transform;
}

.renderer canvas.diff-layer {
	z-index: 20;
}

.renderer canvas.highlight-layer {
	z-index: 50;
}
